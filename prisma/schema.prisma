generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["multiSchema", "omitApi"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  schemas  = ["auth", "public"]
}

model User {
  id            String         @id(map: "users_pk") @db.Uuid
  name          String         @unique(map: "users_name_uindex") @db.VarChar(25)
  email         String         @unique(map: "users_email_uindex") @db.VarChar(255)
  password_hash String
  created_at    DateTime       @default(now()) @db.Timestamptz(6)
  is_deleted    Boolean        @default(false)
  user_session  user_session[]

  @@schema("public")
}

model user_session {
  id             String      @id(map: "user_session_pk") @db.Uuid
  fingerprint_id String      @db.Uuid
  created_at     DateTime    @db.Timestamptz(6)
  expired_at     DateTime    @db.Timestamptz(6)
  user_id        String      @db.Uuid
  fingerprint    fingerprint @relation("user_session_fingerprintTofingerprint", fields: [fingerprint_id], references: [id], onDelete: Cascade, map: "user_session_fingerprint_id_fk")
  User           User        @relation(fields: [user_id], references: [id], onDelete: Cascade, map: "user_session_user_id_fk")

  @@unique([user_id, fingerprint_id], name: "user_id_fingerprint_id_index", map: "user_id_fingerprint_id_index")
  @@schema("auth")
}

model fingerprint {
  id            String         @id(map: "fingerprint_pk") @db.Uuid
  browser       String
  device        String
  os            String
  ip            String
  user_sessions user_session[] @relation("user_session_fingerprintTofingerprint")

  @@unique([browser, device, os, ip], name: "fingerprint_unique_index", map: "fingerprint_unique_index")
  @@unique([browser, device, os, ip])
  @@schema("auth")
}

enum roles {
  super_admin
  user

  @@schema("public")
}
